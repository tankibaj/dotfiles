#!/bin/bash

# Define colors
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# List all secrets in the current namespace and store them in an array
secrets=($(kubectl get secrets --no-headers -o custom-columns=":metadata.name"))

# Check if there are any secrets
if [ ${#secrets[@]} -eq 0 ]; then
  echo -e "${RED}No secrets found in the current namespace.${NC}"
  exit 1
fi

# Display the secrets and prompt the user to select one
echo "Available secrets:"
for i in "${!secrets[@]}"; do
  echo -e "${YELLOW}$((i+1)). ${secrets[$i]}${NC}"
done

echo "Select a secret by its number:"
read -r selection

# Validate the user's selection
if [[ ! "$selection" =~ ^[0-9]+$ ]] || [ "$selection" -le 0 ] || [ "$selection" -gt ${#secrets[@]} ]; then
  echo -e "${RED}Invalid selection.${NC}"
  exit 1
fi

# Fetch and decode the selected secret
selected_secret=${secrets[$((selection-1))]}
secret_data=$(kubectl get secret "$selected_secret" -o json | jq -r '.data')

# Check if the secret has any data
if [ "$secret_data" == "null" ] || [ -z "$secret_data" ]; then
  echo -e "${RED}The selected secret has no data.${NC}"
  exit 1
fi

# Loop through each field in the secret and decode it
echo "Decoded data for secret '${selected_secret}':"

# Decode and print each key-value pair
echo "$secret_data" | jq -r 'to_entries[] | .key + "=" + (.value|@base64d)' | while read -r line; do
    echo -e "${BLUE}$line${NC}"
done
